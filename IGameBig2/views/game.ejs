<!doctype html>
<html lang="en">
<head>
	<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no, viewport-fit=cover">
    <meta name="apple-mobile-web-app-capable" content="no">
    <meta name="apple-mobile-web-app-status-bar-style" content="black-translucent">
    <!-- 안드로이드 홈화면추가시 상단 주소창 제거 -->
    <meta name="mobile-web-app-capable" content="yes">
    <!-- <link rel="manifest" href="/manifest.json"> -->
    <link rel="icon" href="/img/favicon.ico">
    <!-- ios홈화면추가시 상단 주소창 제거 -->
    <!-- <link rel="apple-touch-icon" href="/img/favicon.ico">  -->
    
	<title>☆Poker Hold'em Classic</title>
    <link href='http://fonts.googleapis.com/css?family=Press+Start+2P' rel='stylesheet' type='text/css'>
	<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>
	<link rel="preconnect" href="https://fonts.googleapis.com">
	<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
	<link href="https://fonts.googleapis.com/css2?family=Rowdies:wght@700&display=swap" rel="stylesheet">
	<link href='//spoqa.github.io/spoqa-han-sans/css/SpoqaHanSansNeo.css' rel='stylesheet' type='text/css'>

    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Hahmlet:wght@400;500;700&display=swap" rel="stylesheet">

	<link href="css/common.css" rel="stylesheet" />

	<script src='/socket.io/socket.io.js'></script>

    <script src="game/resource.js"></script>
	<script src="game/constants.js"></script>

	<script src="game/IUIEventGame.js"></script>

    <script type="module" src="js/button.js"></script>
	<script type="module" src="js/label.js"></script>
	<script type="module" src="js/screenconfig.js"></script>

	<script type="module" src="game/IGameMain.js"></script>
	<script type="module" src="game/Instance.js"></script>
    <script type="module" src="game/IBig2Solver.js"></script>
</head>
 <body oncontextmenu="return false" id = "body">
    <div id="loading-screen">
        <img src = "img/loading.gif">
    </div>
    <div id = "image-container">
        <img src = "img/game/landscape.png">
    </div>
    <div id="stage" style="z-index: 9; position:relative;">

    </div>
	<script type="text/javascript">
		var account = JSON.parse('<%-JSON.stringify(account)%>');
        let bManualRebuyin = false;
        const isIOS = /iPad|iPhone|iPod/i.test(navigator.userAgent);
        const isAndroid = /Android|webOS|BlackBerry|IEMobile|Opera Mini/.test(navigator.userAgent);

		var socket = io('/game');
        
        function IsMobile()
        {
            return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);
        }

		$(document).on('ready', () => {
            if ( IsMobile() )
            {
                // console.log(`doc`);
                // fullscreenButton.style.display = 'block';
                // var elem = document.documentElement;
                // if (elem.requestFullscreen) {
                //     elem.requestFullscreen();
                // } else if (elem.webkitRequestFullscreen) { // iOS Safari
                //     elem.webkitRequestFullscreen();
                //     fullscreenButton.style.display = 'none';
                // } else if (elem.msRequestFullscreen) { // IE11
                //     elem.msRequestFullscreen();
                // } else if (elem.mozRequestFullScreen) { // Firefox
                //     elem.mozRequestFullScreen();
                // } else if (elem.webkitEnterFullScreen) { // Older versions of Safari
                //     elem.webkitEnterFullScreen();
                //     fullscreenButton.style.display = 'none';
                // }
            }
		});

		let OnClickSettingClose = () => {
			$('#popup_setting').hide();
		}

        let OnClickSetting = () => {
			$('#popup_setting').show();
		}

		let OnClickExit = () => {
			OnClickLeave();
		}

        let OnClickClose = () => {
            
            if ( confirm('정말로 나가시겠습니까?'))
            {
                window.close();
            }
        }
        let OnClickManualRebuyin = () => {
            bManualRebuyin = true;
            socket.emit('CM_ManualRebuyin',{bManualRebuyin:bManualRebuyin});
        }

		let OnClickModifySetting = () => {
            
            let bOff = $('#radioRebuyInOff').prop('checked');
            let bOn = $('#radioRebuyInOn').prop('checked');
            let iBuyIn = $('#selectRebuyIn').val();

            let strOptionCode = account.strOptionCode;

            let strOption = '';
            if ( bOff == true )
            {
                strOption = '0';
            }
            else
                strOption = '1';

            strOption += (parseInt(iBuyIn) / 100).toString();

            strOptionCode = strOptionCode.substring(2);
            console.log(iBuyIn);
            console.log(strOptionCode);
            
            strOptionCode = strOption + strOptionCode;

            console.log(`Off : ${bOff}, On : ${bOn}, iBuyIn : ${iBuyIn},strOptionCode : ${strOptionCode}`);

            $.ajax({
                type:'post',
                url: "/account/request_modifysetting",
                data: {
                    strID:account.strID,
                    strOptionCode:strOptionCode
                },
                success:function(ret) {
                    console.log(ret);

                    if ( ret.result == 'OK' )
                    {
						alert('수정이 완료 되었습니다.');
						OnClickSettingClose();
                        account.strOptionCode = strOptionCode;
                    }
                    else
                    {
                        alert('수정을 완료 하지 못했습니다.');
                    }
                }
            });
        }

        function doNotReload()
        {
            if(    (event.ctrlKey == true && (event.keyCode == 78 || event.keyCode == 82))
                || (event.keyCode == 116) )
            {
                event.keyCode = 0;
                event.cancelBubble = true;
                event.returnValue = false;
            }
        }
        document.onkeydown = doNotReload;
            // 이미지 요소 선택
            const body = document.querySelector('#body');
            const imageContainer = document.querySelector('#image-container');
            const image = imageContainer.querySelector('img');
            const stage = document.querySelector('#stage');
            
            if (isIOS) {
            window.addEventListener('DOMContentLoaded', function() {
                // 문서가 로드되었을 때 실행할 코드 작성
                var loadingScreen = document.getElementById('loading-screen');
                loadingScreen.style.display = 'none';
                //checkAddressBar();
            });
            function setImage(){
                if(window.innerWidth > window.innerHeight)
                {
                    image.src = landscapeImg.src;
                    stage.style.display = 'block';
                }
                else 
                {
                    imageContainer.style.display = 'block';
                    image.src = verticalImg.src;
                    stage.style.display = 'none';
                }
            }
            function checkAddressBar() {
                //imageContainer.style.display = 'none';
                // 뷰포트 높이와 주소창 높이 계산
                const viewportHeight = window.outerHeight;
                const documentHeight = window.innerHeight;
                const addressBarHeight = viewportHeight - documentHeight;
                //test.value = `${viewportHeight} - ${documentHeight} = ${addressBarHeight}`;
                // 주소창 높이와 뷰포트 높이 비교
                if (addressBarHeight > 20) {
                        imageContainer.style.display = 'block';
                        //stage.style.display = 'none';
                        //stage.style.overflow = ''; // overflow 삭제
                        // body 요소의 padding-top 값 복원
                        document.body.style.paddingTop = '140px';// 주소 표시줄 높이에 맞게 수정
                        //window.scrollTo(0,0);
                } else {
                        // 이미지 숨기기
                        imageContainer.style.display = 'none';
                        //stage.style.display = 'block';
                        //stage.style.overflow = 'hidden'; // overflow 추가
                        document.body.style.paddingTop = 0;
                }
            }
            // 페이지 로드 시 초기 체크
            checkAddressBar();
            // 초기 로드 시 이미지 설정
            setImage();
            // 스크롤 이벤트 감지
            window.addEventListener('scroll', function() {
            // 현재 스크롤 위치 가져오기
            const currentScroll = window.pageYOffset;
            // 주소창 크기 체크
            if(window.innerWidth > window.innerHeight)
            {
                checkAddressBar();
            }
            });
            //클릭 이벤트 감지
            window.addEventListener('click', function() {

            // 주소창 크기 체크
            if(window.innerWidth > window.innerHeight)
            {
                checkAddressBar();
            }
            });
            // 화면 크기 변경 시 주소창 크기 체크
            window.addEventListener('resize', function() {
            if(window.innerWidth > window.innerHeight)
            {
                checkAddressBar();
                //stage.style.display = 'block';
            }
            else 
            {

            }
            setImage();
            });
            // 스크롤 이벤트 캡처
            stage.addEventListener('touchmove', function(event) {
            // 이미지가 숨겨진 경우에만 스크롤을 막음
            if (imageContainer.style.display === 'none') {
                event.preventDefault();
            }
            }, { passive: false });
        }
        else if(isAndroid)
        {
            window.addEventListener('load', function() {
                var loadingScreen = document.getElementById('loading-screen');
                loadingScreen.style.display = 'none';
                if(window.innerWidth > window.innerHeight)
                {
                    imageContainer.style.display = "block";
                    image.src = AndroidlandscapeImg.src;
                    //stage.style.display = 'block';
                }
                else 
                {
                    //imageContainer.style.display = 'block';
                    imageContainer.style.display = "block";
                    image.src = AndroidverticalImg.src;
                    //stage.style.display = 'none';
                }
            });
            window.addEventListener('resize', function() {
                if (document.fullscreenElement || document.webkitFullscreenElement) {
                    if (window.orientation === 0 || window.orientation === 180) {
                    screen.orientation.lock("landscape");
                }
                } else {
                    // 전체화면이 아닐 때의 동작
                    if(window.innerWidth > window.innerHeight)
                    {
                        imageContainer.style.display = "block";
                        image.src = AndroidlandscapeImg.src;
                        //stage.style.display = 'block';
                    }
                    else 
                    {
                        //imageContainer.style.display = 'block';
                        imageContainer.style.display = "block";
                        image.src = AndroidverticalImg.src;
                        //stage.style.display = 'none';
                    }
                }
            });
            image.addEventListener('click',function(event)
            {
                var elem = document.documentElement;
                if (elem.requestFullscreen) {
                    elem.requestFullscreen();
                } else if (elem.webkitRequestFullscreen) { // iOS Safari
                    elem.webkitRequestFullscreen();
                } else if (elem.msRequestFullscreen) { // IE11
                    elem.msRequestFullscreen();
                } else if (elem.mozRequestFullScreen) { // Firefox
                    elem.mozRequestFullScreen();
                } else if (elem.webkitEnterFullScreen) { // Older versions of Safari
                    elem.webkitEnterFullScreen();
                }
                // 화면 방향이 세로 방향일 경우 가로 방향으로 변경
                if (window.orientation === 0 || window.orientation === 180) {
                    screen.orientation.lock("landscape");
                }
                imageContainer.style.display = "none";
            });
        }
        else
        {
            imageContainer.style.display = 'none';
            body.style.overflow = 'hidden';
            window.onload = function(){
                var resizeEvent = 'onorientationchange' in window ? 'orientationchange' : 'resize';
                var loadingScreen = document.getElementById('loading-screen');
                loadingScreen.style.display = 'none';
                $(document).on('click', '.openFullscreen', (e) => {
                    var elem = document.documentElement;
                    if (elem.requestFullscreen) {
                        elem.requestFullscreen();
                    } else if (elem.webkitRequestFullscreen) { /* Safari */
                        elem.webkitRequestFullscreen();
                    } else if (elem.msRequestFullscreen) { /* IE11 */
                        elem.msRequestFullscreen();
                    }
                });
                // 전체화면 모드가 아닐 때는 팝업창 크기를 고정합니다.
                window.addEventListener(resizeEvent, function() {
                    if (!window.document.fullscreenElement) {
                        window.resizeTo(1280, 768);
                    }
                });
            }
        }
	</script>
</body>
</html>
