<!doctype html>
<html lang="en">
<head>
    <!-- jQuery 라이브러리 -->
    <script src="https://code.jquery.com/jquery-3.5.1.js"></script>
    <!-- 부트스트랩 JavaScript 파일 -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
	<script src='/socket.io/socket.io.js'></script>
</head>
 <body>

    <script type="module" src="game/IRobot.js"></script>
    <script type="module" src="game/IRobotManager.js"></script>
	<script type="text/javascript">
		var socket = io('/game');

        $(document).ready(function () {
            $.ajax({
                type:'post',
                url: "/robot/request_robot",
                data: {},
                success:function(ret) {
                    console.log(ret);

                    if ( ret.result == 'OK' )
                    {
						// 데이터를 받은 후 커스텀 이벤트를 생성하고 dispatch
                        var event = new CustomEvent('receivedRobotData', { detail: ret.data });
                        document.dispatchEvent(event);
                    }
                    else
                    {
                        alert('수정을 완료 하지 못했습니다.');
                    }
                }
            });
            // 다른 JavaScript 파일에서 이 이벤트를 listen
            document.addEventListener('receivedRobotData', function (event) {
                // 이벤트에서 데이터를 받아 처리
                var robotData = event.detail;
                // IRobotManager에 데이터를 넘김
                IRobotManager.processData(robotData);
            });
        });

        
    
        // let account = {strID:'bbb', strPassword:'1111', iAvatar:5, lUnique:1555, iCoin:100000, strOptionCode:'01120000', strGroupID:'001010101', iClass:5};

        // let robot = new IRobot(io, account, 0);

        // socket.on('SM_RequestLogin', (data) => {

        //     console.log(`SM_RequestLogin`);
            
        // });

        
        //socket.emit('CM_JoinGame', account.strID, account.lUnique, account.iCoin, account.iAvatar, account.strOptionCode, account.strGroupID, account.iClass);


        // socket.on('SM_RequestLogin', (data) => {

        //     //let account = {strID:'bbb', strPassword:'1111', iAvatar:5};

        //     console.log(`SM_RequestLogin`);
        //     socket.emit('CM_Login', account.strID, account.strPassword, account.iAvatar);
        // });

        // // 840114
        // // socket.e

        // socket.on('SM_Login', (data) => {

        // console.log(`SM_Login`);
        //     console.log(data);
        //     socket.strID = data.strID;
        //     socket.iCoin = data.iCoin;
        //     socket.iAvatar = data.iAvatar;
        // });

        // socket.on('SM_EnterGame', (data) => {

        //     console.log('SM_EnterGame');
        //     console.log(data);

        //     socket.strID = data.strID;
        //     socket.iCoin = data.iCoin;
        //     socket.iPoint = data.iPoint;

        //     // this.Game.UpdateGameInfo(data.strGameName, data.iBlind);
        //     // this.Game.UpdatePoint(parseInt(data.iCoin));

        //     socket.emit('CM_SelectLocation', 0);
        // });

        // socket.on('SM_LeaveGame', (data) => {

        //     console.log('SM_LeaveGame');
        //     console.log(data);

        //     if ( data.result == 'OK' )
        //     {
        //         // this.Game.Initialize();
        //     }
        // });

        // socket.on('SM_JoinUser', (user) => {

        // });

        // socket.on('SM_JoinGame', (listPlayers, iMaxPlayer) => {

        //     console.log(`SM_JoinGame`);
        //     console.log(listPlayers);

        //     // this.Game.SetMaxPlayer(iMaxPlayer);
        //     // this.Game.ProcessLocation(listPlayers);
        // });

        // //  Game
        // socket.on('SM_SelectLocation', (objectData) => {

        //     console.log(`SM_SelectLocation ${objectData.eResult}, ${objectData.iLocation}`);
        //     console.log(objectData);

        //     // if ( true == objectData.eResult )
        //     // {
        //     //     this.Game.ProcessLocationComplete(socket.strID, objectData.iCoin, objectData.iLocation, objectData.iAvatar);
        //     //     this.Game.UpdatePoint(parseInt(objectData.iPoint));
        //     // }
        // });

        // socket.on('SM_BroadcastJoinUser', (objectPlayer) => {

        //     console.log(`SM_BroadcastJoinUser`);
        //     console.log(objectPlayer);
        // });

        // socket.on('SM_BroadcastLeaveUser', (objectPlayer) => {

        //     console.log(`SM_BroadcastLeaveUser`);
        //     console.log(objectPlayer);

        //     // this.Game.RemoveUser(objectPlayer);
        // });

        // socket.on('SM_BroadcastPlaceUser', (objectPlayer) => {

        //     console.log(`SM_BroadcastPlaceUser`);
        //     console.log(objectPlayer);

        //     //this.Game.ProcessLocationSingle(objectPlayer);
        // });

        // socket.on('SM_EnableStartGame', () => {

        //     console.log(`SM_EnableStartGame`);

        //     //this.Game.listButtons[0].bEnable = true;
        // });

        // socket.on('SM_StartGame', (objectData) => {

        //     console.log(`SM_StartGame : eResult : ${objectData.eResult}`);
        //     console.log(objectData.listUser);
        //     // this.Game.EnableUserList(objectData.listUser);
        //     // this.Game.StartGame();
        // })

        // socket.on('SM_FullBroadcastPlayerType', (listData) => {

        //     console.log(`SM_FullBroadcastPlayerType`);
        //     console.log(listData);

        //     // this.Game.SetPlayerType(listData);
        // });

        // socket.on('SM_DefaultAnteSB', (objectData) => {

        //     console.log(`SM_DefaultAnteSB`);
        //     console.log(objectData);

        //     socket.emit('CM_DefaultAnteSB', objectData.iCoin);

        //     // this.Game.SetPlayerBetting(objectData.strID, objectData.iCoin, objectData.iBettingCoin, '');
        //     // this.Game.UpdateTotalBettingCoin(objectData.iTotalBettingCoin);
        // });

        // socket.on('SM_BroadcastDefaultAnteSB', (objectData) => {

        //     console.log(`SM_BroadcastDefaultAnteSB`);
        //     console.log(objectData);

        //     // this.Game.SetPlayerBetting(objectData.strID, objectData.iCoin, objectData.iBettingCoin, '');
        //     // this.Game.UpdateTotalBettingCoin(objectData.iTotalBettingCoin);
        // });

        // socket.on('SM_DefaultAnteBB', (objectData) => {

        //     console.log(`SM_DefaultAnteBB`);
        //     console.log(objectData);

        //     socket.emit('CM_DefaultAnteBB', objectData.iCoin);

        //     // this.Game.SetPlayerBetting(objectData.strID, objectData.iCoin, objectData.iBettingCoin, '');
        //     // this.Game.UpdateTotalBettingCoin(objectData.iTotalBettingCoin);
        // });

        // socket.on('SM_BroadcastDefaultAnteBB', (objectData) => {

        //     console.log(`SM_BroadcastDefaultAnteBB`);
        //     console.log(objectData);

        //     // this.Game.SetPlayerBetting(objectData.strID, objectData.iCoin, objectData.iBettingCoin, '');
        //     // this.Game.UpdateTotalBettingCoin(objectData.iTotalBettingCoin);
        // });

        // socket.on('SM_EnableBetting', (objectData) => {

        //     console.log(`SM_EnableBetting : Call ${objectData.iCallAmount}`);
        //     console.log(objectData.listEnableBettingType);

        //     // this.Game.EnableBetting(objectData);
        //     // this.Game.Focus(socket.strID, objectData.iBettingTime);

        //     let objectBetting = {strBetting:'Call', iAmount:objectData.iCallAmount};
        //     socket.emit('CM_Betting', objectBetting);

        // });

        // socket.on('SM_Focus', (objectPlayer) => {

        //     console.log(`SM_Focus : ${objectPlayer.strID}`);
        //     // this.Game.Focus(objectPlayer.strID, objectPlayer.iBettingTime);
        // });

        // socket.on('SM_Mode', (objectData) => {

        //     console.log(`SM_Mode : ${objectData.eMode}`);

        //     // switch ( objectData.eMode )
        //     // {
        //     // case 'Standby':
        //     //     this.Game.Initialize();
        //     //     break;
        //     // }
        // });

        // socket.on('SM_FullBroadcastBetting', (objectData) => {

        //     console.log(`SM_FullBroadcastBetting`);
        //     console.log(objectData);

        //     // this.Game.SetPlayerBetting(objectData.strID, objectData.iCoin, objectData.iBettingCoin, objectData.strBetting);
        //     // this.Game.UpdateTotalBettingCoin(objectData.iTotalBettingCoin);
        // });

        // socket.on('SM_HandCard', (listCard, strHand, listPots) => {

        //     console.log(`SM_HandCard`);
        //     console.log(listCard);
        //     console.log(strHand);
        //     console.log(listPots);

        //     // this.Game.SetHandCard(listCard, strHand);
        //     // this.Game.UpdatePot(listPots);
        // });

        // socket.on('SM_FlopCard', (listCard, strHand, listPots) => {

        //     console.log(`SM_FlopCard`);
        //     console.log(listCard);
        //     console.log(strHand);

        //     // this.Game.SetFlopCard(listCard, strHand);
        //     // this.Game.UpdatePot(listPots);
        // });

        // socket.on('SM_TurnCard', (listCard, strHand, listPots) => {

        //     console.log(`SM_TurnCard`);
        //     console.log(listCard);
        //     console.log(strHand);

        //     // this.Game.SetTurnCard(listCard, strHand);
        //     // this.Game.UpdatePot(listPots);
        // });

        // socket.on('SM_RiverCard', (listCard, strHand, listPots) => {

        // console.log(`SM_RiverCard`);
        //     console.log(listCard);
        //     console.log(strHand);

        //     // this.Game.SetRiverCard(listCard, strHand);
        //     // this.Game.UpdatePot(listPots);
        // });

        // socket.on('SM_Result', (listResult, listWinCards, strWinnerHand, strWinnerDescr, cPlayingUser, listPots) => {

        //     console.log(`SM_Result`);
        //     console.log(listResult);
        //     console.log(listWinCards);
        //     console.log(strWinnerHand);

        //     // this.Game.ProcessResult(listResult, listWinCards, strWinnerHand, strWinnerDescr, cPlayingUser);
        //     // this.Game.UpdatePot(listPots);
        // });

        // socket.on('SM_RebuyIn', (listObject) => {

        //     console.log(`SM_RebuyIn`);
        //     console.log(listObject);

        //     // this.Game.ProcessRebuyIn(listObject);
        // });

        // socket.on('SM_ShowDown',(listData) => {

        //     console.log(`SM_ShowDown`);
        //     this.Game.ProcessShowDown();
        // });

        // socket.on('SM_ShowDownTurnCard',(listData) => {

        //     console.log(`SM_ShowDownTurnCard`);
        //     console.log(listData);

        //     // this.Game.ProcessShowDownTurnCard(listData);
        // });

        // socket.on('SM_Error', (objectError) => {

        //     console.log(`SM_Error`);
        //     console.log(objectError);
        // });

	</script>
</body>
</html>
