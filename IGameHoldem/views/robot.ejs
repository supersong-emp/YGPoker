<html>
<head>
    <!-- jQuery 라이브러리 -->
    <script src="https://code.jquery.com/jquery-3.5.1.js"></script>
    <!-- 부트스트랩 JavaScript 파일 -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
</head>
 <body>
    <div id="tableContainer" style="width: 100%; height: 300px; overflow: auto;">
        <table class="table table-striped" id="robotTable">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>닉네임</th>
                    <th>캐쉬</th>
                    <th>게임</th>
                    <th>방제목</th>
                    <th>블라인드</th>
                    <th>머니주기</th>
                    <th>참가</th>
                </tr>
            </thead>
            <tbody>
            </tbody>
        </table>
    </div>
    <button id="requestRobotButton" class="btn btn-primary">로봇 전체 참가</button>
    <button id="giveAllMoneyButton" class="btn btn-primary">전체 머니 주기</button>
    <div class="text-end mr-3">
        <span class="badge bg-primary fs-4 fw-bold">조커 본사 머니:</span>
        <span id="jokerCash" class="fs-4"></span>
    </div>
    <script type="module" src="game/IRobot.js"></script>
    <script type="module" src="game/IRobotManager.js"></script>
    <script src='/socket.io/socket.io.js'></script>
	<script type="text/javascript">
		const socket = io('/game');

        document.addEventListener('DOMContentLoaded', (event) => {
            var robotData = [];
            $.ajax({
                    type:'post',
                    url: "/robot/request_robot",
                    data: {},
                    success:function(ret) {
                        console.log(ret);
                        if ( ret.result == 'OK' )
                        {
                            //var event = new CustomEvent('receivedRobotData', { detail: ret.data });
                            //document.dispatchEvent(event);
                            // Joker의 현금 업데이트
                            robotData = ret.data;
                            for(let i=0; i < robotData.length; i++) {
                                robotData[i].strGameName = '';
                                robotData[i].iBlind = '';
                                robotData[i].eGameType = '홀덤';
                                robotData[i].sEnter = '참가';
                            }
                            $('#jokerCash').text(ret.jokerCash.toLocaleString());
                            updateTable(robotData);
                        }
                        else
                        {
                            alert('수정을 완료 하지 못했습니다.');
                        }
                    }
            });
            
            $("#requestRobotButton").click(function() {
                $.ajax({
                    type:'post',
                    url: "/robot/request_robot",
                    data: {},
                    success:function(ret) {
                        console.log(ret);
                        if (ret.result == 'OK') {
                            let relevantRobots = robotData.filter(existingRobot => {
                                // 해당 로봇을 ret.data에서 찾기
                                let foundRobot = ret.data.find(r => r.strID == existingRobot.strID);

                                // 찾은 로봇의 sEnter가 undefined 또는 '참가'인지 확인
                                return foundRobot && (foundRobot.sEnter == undefined || foundRobot.sEnter == '참가');
                            });

                            // 해당 로봇 데이터만 이벤트로 전송
                            var event = new CustomEvent('receivedRobotData', { detail: relevantRobots });
                            document.dispatchEvent(event);

                            // Joker의 현금 업데이트
                            $('#jokerCash').text(ret.jokerCash.toLocaleString());
                        } else {
                            alert('수정을 완료 하지 못했습니다.');
                        }
                    }
                });
            });

            // 머니 주기 버튼에 대한 클릭 이벤트
            $(document).on('click', '.giveMoney', function() {
                var id = $(this).data('id');  // 이 버튼이 속한 로봇의 ID를 가져옴
                var amount = prompt("얼마를 주시겠습니까?");
                if (amount) {
                    $.ajax({
                        type:'post',
                        url: "/robot/request_moneygive",
                        data: { strID: id, amount: amount },
                        success:function(ret) {
                            console.log(ret);
                            if (ret.result == 'OK') {
                                // 데이터를 업데이트
                                for (var i = 0; i < robotData.length; i++) {
                                    if (robotData[i].strID == ret.data.strID) {
                                        robotData[i].iCash = ret.data.iCash;
                                        break;
                                    }
                                }
                                // Joker의 현금 업데이트
                                $('#jokerCash').text(ret.jokerCash.toLocaleString());
                                // 테이블 업데이트
                                updateTable(robotData);
                            }
                        }
                    });
                }
            });
            $(document).on('click', '.enterRobot', function() {
                var id = $(this).data('id');  // 이 버튼이 속한 로봇의 ID를 가져옴
                var iCash = $(this).closest('tr').find('td:nth-child(3)').text(); // 해당 로봇의 iCash 값을 가져옵니다.
                var buttonText = $(this).text(); // 버튼의 텍스트 값을 확인
                console.log(id);
                console.log(iCash);

                if (buttonText == '퇴장') {
                    alert("곧 기능 추가가 됩니다. 잠시만 기다려주세요.");
                    return;  // '퇴장'인 경우 함수 종료
                }

                if (parseInt(iCash) == 0) {
                    alert("머니가 0원이라 참가할 수가 없습니다.");
                    return;
                }

                $.ajax({
                    type:'post',
                    url: "/robot/request_robotinfo",
                    data: { strID: id },
                    success:function(ret) {
                        console.log(ret);
                        if (ret.result == 'OK') {
                            var event = new CustomEvent('receivedRobotData', { detail: ret.data });
                            document.dispatchEvent(event);
                        }
                        else
                        {
                            alert("ai 값이 정확하지 않습니다. 확인 부탁드립니다.");
                        }
                    }
                });
            });

            // 로봇 전체에 머니 주기 버튼
            $("#giveAllMoneyButton").click(function() {
                var amount = prompt("모든 로봇에게 얼마를 주시겠습니까?");
                if (amount) {
                    $.ajax({
                        type:'post',
                        url: "/robot/request_moneygiveall",
                        data: { amount: amount },
                        success:function(ret) {
                            console.log(ret);
                            if (ret.result == 'OK') {
                                // 데이터를 업데이트
                                for (var i = 0; i < robotData.length; i++) {
                                    for (var j = 0; j < ret.data.length; j++) {
                                        if (robotData[i].strID == ret.data[j].strID) {
                                            robotData[i].iCash = ret.data[j].iCash;
                                            break;
                                        }
                                    }
                                }
                                // Joker의 현금 업데이트
                                $('#jokerCash').text(ret.jokerCash.toLocaleString());
                                // 테이블 업데이트
                                updateTable(robotData);
                            }
                        }
                    });
                }
            });

            // 다른 JavaScript 파일에서 이 이벤트를 listen
            document.addEventListener('receivedRobotData', function (event) {
                // `event.detail`이 배열인지 확인
                let receivedData = Array.isArray(event.detail) ? event.detail : [event.detail]; // 배열이 아니라면 배열로 만듦

                // Add the new properties
                for(let i=0; i < robotData.length; i++) {
                    for(let j=0; j < receivedData.length; j++) {
                        if(receivedData[j].strID == robotData[i].strID) {
                            robotData[i].strGameName = '';
                            robotData[i].iBlind = '';
                            robotData[i].eGameType = '홀덤';
                            robotData[i].sEnter = '퇴장';
                        }
                    }
                }

                updateTable(robotData);
            });

            function appendToTable(robot) {
                // 버튼의 클래스를 결정
                var buttonClass = (robot.sEnter === '참가') ? 'btn-primary' : 'btn-danger';
                // 테이블에 새로운 행을 추가
                var newRow = "<tr><td>" + robot.strID + "</td><td>" + robot.strNickname + "</td><td>" + robot.iCash + "</td><td>" + robot.eGameType + "</td><td>" + robot.strGameName + "</td><td>" + robot.iBlind + "</td><td><button class='btn btn-primary giveMoney' data-id='" + robot.strID + "'>머니주기</button></td>" + "</td><td><button class='btn " + buttonClass + " enterRobot' data-id='" + robot.strID + "'>" + robot.sEnter + "</button></td></tr>";
                
                $("#robotTable tbody").append(newRow);
            }

            function updateTable(data) {
                // 테이블 내용을 초기화
                $("#robotTable tbody").empty();
                // 각 로봇에 대해
                // 데이터 타입 확인
                if (Array.isArray(data)) {
                    // 배열 데이터 처리
                    data.forEach(appendToTable);
                } else {
                    // 단일 데이터 처리
                    appendToTable(data);
                }
            }     

            socket.on('connect', () => {
                console.log("connect");
            });

            socket.on('disconnect', () => {
                console.log("disconnect");
            });

            socket.on('SM_UpdateICash', (data) => {
                console.log(`SM_UpdateICash`);
                console.log(data);

                // 데이터를 업데이트
                for (var i = 0; i < robotData.length; i++) {
                    if (robotData[i].strID == data.strID) {
                        robotData[i].iCash = data.iCash;
                        break;
                    }
                }
                // 테이블 업데이트
                updateTable(robotData);
            });

            socket.on('SM_RoomUpdate', (data) => {
                console.log(`SM_RoomUpdate ejs`);
                console.log(data);

                // 데이터를 업데이트
                //여기에 data.strGameName, data.iBlind, data.eGameType 업데이트 해줄려고 하는데 
                for (var i = 0; i < robotData.length; i++) {
                    if (robotData[i].strID == data.strID) {
                        robotData[i].strGameName = data.strGameName;
                        robotData[i].iBlind = data.iBlind;
                        //robotData[i].eGameType = data.eGameType;
                        break;
                    }
                }
                // 테이블 업데이트
                updateTable(robotData);
            });

            $(document).on('keydown', function (event) {
                // F5 키의 keyCode는 116입니다.
                if (event.which == 116) {
                    event.preventDefault(); // 기본 동작 중단
                    alert("F5 버튼은 사용할 수 없습니다.");
                }
            });
        });

        window.addEventListener('beforeunload', function (e) {
            e.preventDefault();
        });
	</script>
</body>
</html>
